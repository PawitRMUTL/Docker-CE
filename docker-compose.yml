# FOR AWS
version: '3'
services:
  # Database
  Database:
    platform: linux/amd64
    image: mysql:5.7.39
    container_name: Dolphin_mysql_compose
    environment:
      MYSQL_ROOT_PASSWORD: keep1234
      MYSQL_DATABASE: Portal
      MYSQL_ROOT_USERNAME: root
      MYSQL_PASSWORD: keep1234
    volumes:
      - ./portal.sql:/docker-entrypoint-initdb.d/portal.sql
    networks:
      my-network:
        ipv4_address: '192.168.5.8'

  # Front-end
  front_end:
    # image: pawitpt/my-react:v1
    build:
      context: ./CEreform-frond-end #build from folder
      dockerfile: dockerfile # Specify the Dockerfile to use
    ports:
      - '8080:80' # Change the external port to 8080
    networks:
      my-network:
        ipv4_address: '192.168.5.9'

  # Backend API
  api:
    # image: pawitpt/myapi:v1
    build:
      context: ./CEreform-back-end #build from folder
      dockerfile: dockerfile # Specify the Dockerfile to use
    expose:
      - '3000'
    networks:
      my-network:
        ipv4_address: '192.168.5.10'

  # Nginx
  nginx:
    platform: linux/amd64
    container_name: myapp_nginx
    image: nginx:latest
    depends_on:
      - api
    ports:
      - '80:80' # Nginx listens on port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      my-network:
        ipv4_address: '192.168.5.11'

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.5.0/24
